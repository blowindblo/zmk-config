on: [push, pull_request, workflow_dispatch]

name: Build

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: zmkfirmware/zmk-build-arm:stable
    strategy:
      fail-fast: false
      matrix:
        include:
          - shield: crbn
            board: nice_nano
         # - shield: twoni_left
         #   board: nice_nano_v2
         # - shield: twoni_right
         #   board: nice_nano
          - shield: cradio_left
            board: nice_nano
          - shield: cradio_right
            board: nice_nano
    name: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache west modules
        uses: actions/cache@v2
        env:
          cache-name: cache-zephyr-modules
        with:
          path: |
            modules/
            tools/
            zephyr/
            bootloader/
            zmk/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('manifest-dir/west.yml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: West Init
        run: west init -l config
      - name: West Update
        run: west update
      - name: West Zephyr export
        run: west zephyr-export
      - name: Prepare variables
        id: variables
        run: |
          if [ -n "${{ matrix.shield }}" ]; then
            SHIELD_ARG="-DSHIELD=${{ matrix.shield }}"
            FILE_NAME="${{ matrix.shield }}-${{ matrix.board }}".uf2
            ARTIFACT_NAME="$(echo ${{ matrix.shield }} | perl -pe 's/_left|_right//g')"
          else
            FILE_NAME="${{ matrix.board }}".uf2
            SHIELD_ARG=
            ARTIFACT_NAME="${{ matrix.board }}"
          fi
          echo ::set-output name=shield-arg::${SHIELD_ARG}
          echo ::set-output name=file-name::${FILE_NAME}
          echo ::set-output name=artifact-name::${ARTIFACT_NAME}
      - name: Build (west build)
        run: |
          west build -s zmk/app -b ${{ matrix.board }} -- ${{ steps.variables.outputs.shield-arg }} -DZMK_CONFIG="${GITHUB_WORKSPACE}/config"
          mv build/zephyr/zmk.uf2 ${{ steps.variables.outputs.file-name }}
      - name: Generated DTS File
        if: ${{ always() }}
        run: cat -n build/zephyr/${{ matrix.board }}.dts.pre.tmp
      - name: Kconfig file
        run: cat build/zephyr/.config | grep -v "^#" | grep -v "^$"
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.variables.outputs.artifact-name }}
          path: '*.uf2'
        continue-on-error: true

