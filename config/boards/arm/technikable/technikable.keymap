/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BAS_L 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3
#define TAB_L 4

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <180>; };

#define BT(n) BT_SEL n

/ {
    combos {
          #include "combos_technik.dtsi"
     };

    chosen {
        zmk,matrix_transform =
            &ortho_transform;
    };


    behaviors {
		hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
	};

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
 &lt SYM_L ESC    &kp Q      &kp W      &kp E       &kp R          &kp T          &kp Y            &kp U          &kp I       &kp O      &kp P         &kp BKSP
 &lt TAB_L TAB    &kp A      &kp S      &kp D      &hm LSHFT F     &kp G          &kp H            &hm LSHFT J          &kp K       &kp L      &lt SYM_L SEMI      &kp QUOT
 &kp LSHFT      &kp Z      &kp X      &kp C       &kp V             &kp B          &kp N            &kp M          &kp COMMA   &kp DOT    &kp FSLH      &kp RET
                       &kp LGUI  &kp LALT    &kp LCTRL      &mo NAV_L      &lt NUM_L SPACE        &lt NUM_L SPACE      &kp RALT    &kp RCTRL

            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
&kp C_PP	&kp LS(N1) 	&kp LS(N2) 	&kp LS(N3) 	&kp LS(N4) 		&kp LS(N5) 	&kp LS(N6) 	&kp LS(N7) 		&kp LS(N8) 		&kp LS(N9) 		&kp LS(N0) 		&kp DEL
&kp GT		&kp F1 		&kp F2 		&kp F3 		&hm LSHFT F4 	&kp F5  	&kp F6 	 	&hm LSHFT HOME 		&kp END 		&kp PG_UP		&kp PG_DN		&kp PIPE
&trans		&kp F7 		&kp F8 		&kp F9 		&kp F10	    &kp F11 	    &kp F12 	&kp LC(LEFT) 	&kp LC(RIGHT)	&trans  		&kp BSLH  		&trans
                       &kp LGUI  &kp LALT    &kp LCTRL      &mo NAV_L      &lt NUM_L SPACE        &lt NUM_L SPACE      &kp RALT    &kp RCTRL
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
&kp C_PP 	&kp MINUS 	&kp N1 		&kp N2 		&kp N3		&kp GRAVE		&kp N0 		&kp N1 		&kp N2 		&kp N3 			&kp PLUS 		&kp DEL
&kp DEL 	&kp N0  	&kp N4 		&kp N5 		&hm LSHFT N6		&kp TILDE		&kp EQUAL 	&hm LSHFT N4 		&kp N5 		&kp N6 			&kp MINUS 		&kp LT
&trans 		&kp DOT 	&kp N7 		&kp N8 		&kp N9		        &kp BSLH 		&kp UNDER 	&kp N7 		&kp N8 		&kp N9 			&kp DOT 		&kp COMMA
                     &trans    &trans      &trans    &none         &none     &trans        &trans      &trans
            >;
        };
        
        sym_layer {
            label = "Sym";
            bindings = <
			&trans	&reset 	&bootloader 	&bt BT_CLR 		&bt BT_SEL 0 	&kp C_BRI_UP 	&trans          &trans		&kp UP 		&trans		&trans 	&trans 	
			&trans	&trans 	&trans 			&trans          &bt BT_SEL 1    &kp C_BRI_DN 	&kp C_BRI_UP 	&kp LEFT 		&kp DOWN 	&kp RIGHT 	&trans 	&trans 	
			&trans	&trans 	&trans 			&trans 		    &bt BT_SEL 2 	&kp LC(LS(M)) 	&trans 			&trans			&trans 		&trans 		&trans 		&trans 	
                      &trans    &trans      &trans          &trans       &trans    &trans  &trans         &trans
            >;
        };    
        
        tab_layer {
            label = "Tab";
            bindings = <
&kp C_PP 	&kp LC(LEFT) 	&kp UP	 	&kp LC(RIGHT) 	&kp LA(F4)		&kp GRAVE		&kp N0 		&kp N1 		&kp N2 		&kp N3 			&kp PLUS 		&kp DEL
&trans 	    &kp LEFT 		&kp DOWN 	&kp RIGHT 		&kp C_VOL_UP	&kp TILDE		&kp EQUAL 	&kp N4 		&kp N5 		&kp N6 			&kp MINUS 		&kp LT
&trans 		&kp C_PREV 		&kp C_PP 	&kp C_NEXT 		&kp C_VOL_DN 	&kp BSLH 		&kp UNDER 	&kp N7 		&kp N8 		&kp N9 			&kp DOT 		&kp COMMA
                      &trans    &trans      &trans          &trans       &trans    &trans  &trans         &trans
            >;
        };
    };
};